- title: 'layout'
  blocks:
    - type: 'small_title'
      title: 'Float Grid'
    - type: 'light-body-text'
      body: "A float grid is the most basic type of responsive grid. It allows you to set the amount of columns an element spans, as well as any column offsets. The default number of columns in the grid is 12, but this can be overritten as outlined in settings#grid-columns."
    - type: 'light-body-text'
      body: "A float grid must be wrapped in an element with the .clearfix class for the document to respect the grid’s height. The grid items must have .col class, as well as the respective .col-<columns> class. To create gutters, use a combination of the .mxn<spacing> class on the parent element and  .px<spacing> classes on the column children."
    - type: 'code_block'
      title: 'Implementation'
      code: "<div class=‘clearfix mxn2 border-gray’>
  <div class=‘col col-12 md:col-4 px2 bg-color-grey’>
    COLUMN #1
  </div>
  <div class=‘col col-12 md:col-4 px2 bg-color-grey’>
    COLUMN #2
  </div>
  <div class=‘col col-12 md:col-4 px2 bg-color-grey’>
    COLUMN #2
  </div>
  <div class=‘col off-4 col-8 px2 bg-color-grey’>
    OFFSET COLUMN
  </div>
</div>"
    - type: 'code_example'
      implementation: 'float-grid'
- title: 'helpers'
  blocks:
    - type: 'small_title'
      title: 'Aspect Ratio Helper'
    - type: 'light-body-text'
      body: "The aspect ratio helper constrains elements to designated aspect ratios. .aspect-<ratio> classes are generated from the $aspect-ratios setting as outlined in settings#aspect-ratios."
    - type: 'light-body-text'
      body: "The use this helper, apply the .aspect-<ratio> class to a nelement. All direct descendants will be constrained to the respective aspect ratio."
    - type: 'code_example'
      implementation: 'aspect-ratio-helper'
